#!/usr/bin/env python

import sys 
#import BaseHTTPServer 
#import socket
from Tkinter import *
import SimpleHTTPServer
import SocketServer
import threading
import netifaces

class WebserverThread (threading.Thread):
    def __init__(self, threadID, name):
        threading.Thread.__init__(self)
        self.threadID = threadID
        self.name = name

    def run(self):
        self.PORT = port
        self.Handler = SimpleHTTPServer.SimpleHTTPRequestHandler
        self.httpd = SocketServer.TCPServer(("", self.PORT), self.Handler)

        print "--- serving at port", self.PORT
        self.httpd.serve_forever()

    def close(self):
        self.httpd.shutdown()
        print "Exiting web server Thread"


def startprog():
	thread1 = WebserverThread(1, "Thread-1")
	thread1.start()
	top = Tk()
	top.protocol('WM_DELETE_WINDOW', top.quit)
	v = ("serving HTTP on", (", ".join(ip)), "port", str(port), "...")
	tp = " ".join(v)
	l0 = Label(top, text=tp)
	l0.grid()
	top.mainloop()
	thread1.close()
	
def getNetworkIp():
    ip_addresses = list()
    interfaces = netifaces.interfaces()
    for i in interfaces:
        if i == 'lo':
            continue
        iface = netifaces.ifaddresses(i).get(netifaces.AF_INET)
        if iface:
            for j in iface:
                addr = j['addr']
                if addr != '127.0.0.1':
                    ip_addresses.append(addr)
    return ip_addresses

def scelta():
	top = Tk()
	top.protocol('WM_DELETE_WINDOW', top.quit)
	v = ("Ethernet", "IP", (", ".join(ip)))
	tp = " ".join(v)
	l0 = Label(top, text=tp)
	l0.grid(row=0, column=0, columnspan=2)
	l1 = Label(top, text="Port")
	l1.grid(row=1, column=0)
	ttt = StringVar(top, 8000)
	e1 = Entry(top, textvariable=ttt, width=4, bd = 4)
	e1.grid(row=1, column=1)
	b1 = Button(top, text='start', command=top.quit, width=6)
	b1.grid(row=2, column=0, columnspan=2)
	top.mainloop()
	p = int(e1.get())
	top.destroy()
	return p

ip = getNetworkIp()
port = scelta()
due = startprog()
